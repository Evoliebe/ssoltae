<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyber.smedu.mapper.OpenSubjectMapper">
	<!-- 관리자 학생성적관리 상세보기 기수, 과목 선택시 과목정보 -->
	<select id="selectAdminStudentGradeDetailSubject"
			parameterType="String"
			resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
	SELECT 
		s.subject_name as subjectName,
		o.professor_name as professorName,
		s.subject_sort as subjectSort,
		s.subject_credit as subjectCredit
	FROM
		open_subject o
	INNER JOIN
		subject s
	ON
		o.subject_code = s.subject_code
	WHERE 
		open_subject_code = #{openSubjectCode}
	</select>
	
	<!-- 관리자 개설과목 리스트 (검색)-->
	<select id="selectAdminOpenSubject"
			resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
	SELECT 
		os.open_subject_code as openSubjectCode,
		os.cardinal_code as cardinalCode,
		os.professor_code as professorCode,
		os.subject_code as subjectCode,
		os.book_code as bookCode,	
		os.cardinal as cardinal,
		os.professor_name as professorName,
		os.subject_name as subjectName,
		os.book_name as bookName,
		os.register_date as registerDate
	FROM
		open_subject os
	INNER JOIN
		cardinal c
	ON
		os.cardinal_code = c.cardinal_code
	WHERE
		str_to_date(now(),'%Y-%m-%d') >= c.recruit_start_day 
	AND
		c.class_end_day >= str_to_date(now(),'%Y-%m-%d')
	<if test="cardinalCode != ''">
	AND
		c.cardinal_code = #{cardinalCode}
	</if>
	<if test="subjectName != ''">
	AND
		os.subject_name = #{subjectName}
	</if>
	<if test="professorName != ''">
	AND
		os.professor_name = #{professorName}
	</if>
	</select>
	<!-- 의기 -->
	
	<select id="lectureList"
			parameterType="String"
			resultType="com.cyber.smedu.opensubject.domain.LectureDomain">
	SELECT 
		l.lecture_code AS lectureCode,
		l.lecture_subject AS lectureSubject,
		l.lecture_content AS lectureContent,
		l.lecture_link AS lectureLink,
		l.lecture_time AS lectureTime,
		l.open_subject_code AS openSubjectCode,
		o.professor_name AS professorName,
		o.book_name AS bookName	,
		o.cardinal_code AS cardinalCode,
		a.weekly_schedule AS weeklySchedule,
		a.academic_calendar_start_day AS academicCalendarStartDay,
		a.academic_calendar_end_day AS academicCalendarEndDay
		
	FROM 
		lecture AS l
	INNER JOIN 
		open_subject AS o
	ON
		l.open_subject_code = o.open_subject_code	
	INNER JOIN
		academic_calendar AS a
	ON
		l.academic_calendar_code = a.academic_calendar_code
	
	WHERE
		l.open_subject_code =   #{openSubjectCode}	
	</select>
	
	
	<select id="openSubjectAttendList"
			parameterType="com.cyber.smedu.attend.domain.AttendDomain"
			resultType="com.cyber.smedu.attend.domain.AttendDomain">
	select 
		lecture_code AS lectureCode,
		attend_complete_confirmation AS attendCompleteConfirmation
	FROM
		attend
	WHERE 
		open_subject_code = #{openSubjectCode} AND student_code = #{studentCode}	
	</select>
	
	
	<!-- 한명의 학생 회원정보 -->
	<select id="studentSelectOne" 
			parameterType="String" 
			resultType="com.cyber.smedu.user.domain.StudentDomain">
		SELECT	
			u.user_code AS userCode,
			u.department_code AS departmentCode,
			d.department_name AS departmentName,
			u.user_id AS userId,
			u.user_pw AS userPw,
			u.user_name AS userName,
			u.user_birth AS userBirth,
			u.user_gender AS userGender,
			u.user_address AS userAddress,
			u.user_phone AS userPhone,
			u.user_email AS userEmail,
			u.user_educational AS userEducational,
			u.user_state AS userState,
			s.student_code AS studentCode,
			s.cardinal_code AS cardinalCode,
			s.student_path AS studentPath,
			s.student_goal AS studentGoal
		FROM 
			user u 
		INNER JOIN
			student s
		ON 
			u.user_code = s.user_code
		INNER JOIN 
			department d
		ON 
			u.department_code = d.department_code
		WHERE 
			u.user_code = #{userCode}
	</select>

	<select id="classroomAcademicaCtivity"
			parameterType="com.cyber.smedu.user.domain.StudentDomain"
			resultType="com.cyber.smedu.academiccalendar.domain.CardinalDomain">
	select 
		c.open_subject_code AS openSubjectCode,
		o.subject_name AS subjectName,
		ca.year AS year,
		ca.semester AS semester,
		ca.cardinal AS cardinal,
		ca.class_start_day AS classStartDay,
		ca.class_end_day AS classEndDay
	FROM
		class_registration AS c	
	INNER JOIN 
		open_subject AS o	
	ON
		c.open_subject_code = o.open_subject_code	
	INNER JOIN
		cardinal AS ca
	ON
		ca.cardinal_code = c.cardinal_code		
	WHERE
		c.student_code = #{studentCode} AND c.cardinal_code = #{cardinalCode} AND c.pay_state="결제완료"
	</select>
	
	<!-- 강의코드로 한 강의 객체만들기 -->
	<select id="oneLecture"
			parameterType="String"
			resultType="com.cyber.smedu.opensubject.domain.LectureDomain">
	select 
		l.lecture_code AS lectureCode,
		l.open_subject_code AS openSubjectCode,
		l.academic_calendar_code AS academicCalendarCode,
		l.lecture_subject AS lectureSubject,
		l.lecture_content AS lectureContent,
		l.lecture_link AS lectureLink,
		l.lecture_time AS lectureTime,
		l.lecture_register_date AS lectureRegisterDate,
		a.academic_calendar_end_day AS academicCalendarEndDay
	FROM 
		lecture AS l
	INNER JOIN 
		academic_calendar AS a
	ON
	 	l.academic_calendar_code = a.academic_calendar_code		
	WHERE 
		lecture_code = #{lectureCode}		
	</select>
	
	<select id="objectionInsertForm"
			parameterType="String"
			resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
	SELECT
		professor_code AS professorCode,
		open_subject_code AS openSubjectCode
	FROM
		open_subject
	WHERE
		open_subject_code = #{openSubjectCode}
	
	</select>
	
	<select id="examOpenSubjectList"
			parameterType="com.cyber.smedu.opensubject.domain.LectureDomain"
			resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
			
	SELECT
		o.open_subject_code AS openSubjectCode,
		o.cardinal_code AS cardinalCode,
		o.professor_code AS professorCode,
		o.subject_code AS subjectCode,
		o.book_code AS bookCode,
		o.cardinal AS cardinal,
		o.professor_name AS professorName,
		o.subject_name AS subjectName,
		o.book_name AS bookName,
		o.register_date AS registerDate,
		l.lecture_subject AS lectureSubject
	FROM
		open_subject AS o
	INNER JOIN
		lecture AS l
	ON
		o.open_subject_code = l.open_subject_code	
	
	WHERE o.open_subject_code = #{openSubjectCode} AND l.lecture_code = #{lectureCode}
	
	</select>
	<!-- 장용 -->
	<select id="selectOpenSubjectList"
			parameterType="java.util.Map"
			resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
	SELECT 
		os.open_subject_code as openSubjectCode,
		os.cardinal_code as cardinalCode,
		os.professor_code as professorCode,
		os.subject_code as subjectCode,
		os.professor_name as professorName,
		s.department_code as departmentCode,
		s.subject_name as subjectName,
		s.subject_sort as subjectSort,
		s.subject_pay as subjectPay,
		s.subject_credit as subjectCredit
	FROM
		open_subject as os
	INNER JOIN
		subject as s
	on
		os.subject_code = s.subject_code
	<where>
		<if test="cardinalCode!=''">
		os.cardinal_code = #{cardinalCode}
		</if>
		<if test="departmentCode!=''">
	AND
		s.department_code = #{departmentCode}
		</if>
	</where>
	</select>
	<!-- 현호 -->
	
	<!-- 강의관리를 위한 교수 담당과목 select -->
	<select id="professorSubjectSelectForLecture"
		parameterType="String"
		resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
		
	SELECT
		open_subject_code AS openSubjectCode,
		subject_code AS subjectCode,
		cardinal_code AS cardinalCode,
		subject_name AS subjectName
	FROM
		open_subject
	WHERE
		professor_code = #{professorCode}
		
	</select>
	
	<!-- 리스트에 보여주기위한 해당과목의 일정별 강의 주제/강의시간/강의등록일자 등 select -->
	<select id="professorLectureListSelect"
		parameterType="String"
		resultType="com.cyber.smedu.opensubject.domain.LectureDomain">
		
	SELECT
		a.weekly_schedule AS weeklySchedule,
		l.lecture_code AS lectureCode,
		l.lecture_subject AS lectureSubject,
		l.lecture_time AS lectureTime,
		l.lecture_register_date AS lectureRegisterDate
	FROM	
		lecture l
	INNER JOIN
		academic_calendar a
	ON
		a.academic_calendar_code = l.academic_calendar_code
	WHERE
		l.open_subject_code = #{openSubjectCode}
	ORDER BY
		lecture_code ASC
		
	</select>
	
	<!-- 강의 상세보기를 위한 select -->
	<select id="professorLetureDetail"
		parameterType="String"
		resultType="com.cyber.smedu.opensubject.domain.LectureDomain">

	SELECT
		lecture_code AS lectureCode,
		lecture_subject AS lectureSubject,
		lecture_content AS lectureContent,
		lecture_link AS lectureLink,
		lecture_time AS lectureTime
	FROM
		lecture
	WHERE
		lecture_code = #{lectureCode}
	
	</select>
	
	<!-- 강의 update -->
	<update id="professorLectureUpdate"
		parameterType="com.cyber.smedu.opensubject.domain.LectureDomain">
	
	UPDATE 
		lecture
	SET
		lecture_subject = #{lectureSubject},
		lecture_content = #{lectureContent},
		lecture_link = #{lectureLink},
		lecture_time = #{lectureTime}
	WHERE 
		lecture_code = #{lectureCode}
	</update>
	
	<!-- 강의등록 화면에 뿌려줄 정보 select -->
	<select id="LectureInsertViewForSelect"
		parameterType="String"
		resultType="com.cyber.smedu.academiccalendar.domain.AcademicCalendarDomain">

	SELECT 
		a.academic_calendar_code AS academicCalendarCode,
		a.weekly_schedule AS weeklySchedule
	FROM
		open_subject o 
	INNER JOIN
		academic_calendar a
	ON
		o.cardinal_code = a.cardinal_code
	WHERE
		o.open_subject_code = #{openSubjectCode}
	
	</select>
	
	<!-- 강의insert 쿼리 -->
	<insert id="professorLectureInsert"
		parameterType="com.cyber.smedu.opensubject.domain.LectureDomain">
	
	INSERT INTO 
		lecture
		(
		lecture_code, 
		open_subject_code, 
		academic_calendar_code, 
		lecture_subject, 
		lecture_content, 
		lecture_link, 
		lecture_time, 
		lecture_register_date
		)
	VALUES 
		(
		CONCAT('lecture_code',(SELECT COUNT(l.lecture_code)+1 FROM lecture l)), 
		#{openSubjectCode}, 
		#{academicCalendarCode}, 
		#{lectureSubject}, 
		#{lectureContent}, 
		#{lectureLink}, 
		#{lectureTime}, 
		NOW()
		)
	
	</insert>
	
	<select id="lectureAcademicCalendarCodeSelect"
		parameterType="String"
		resultType="com.cyber.smedu.opensubject.domain.LectureDomain">
	SELECT 
		l.academic_calendar_code AS academicCalendarCode
	FROM
		open_subject o
	INNER JOIN
		lecture l
	ON
		o.open_subject_code = l.open_subject_code
	WHERE
		l.open_subject_code = #{openSubjectCode}
	</select>
	<!-- 우영 -->

	<select id="plannerStudnetListCardinalSelectOpenSubjectList"
		parameterType="java.util.Map"
		resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
	SELECT 
		os.open_subject_code as openSubjectCode,
		os.cardinal_code as cardinalCode,
		s.subject_name as subjectName 
	FROM
		open_subject os
	INNER JOIN
		subject s
	ON
		os.subject_code = s.subject_code
	INNER JOIN
		department d
	ON
		s.department_code = d.department_code
	WHERE
		os.cardinal_code = #{cardinalCode}
	AND
		d.department_code = #{departmentCode}
	</select>
	
	<select id="selectOpenSubjectName"
			parameterType="String"
			resultType="com.cyber.smedu.opensubject.domain.OpenSubjectDomain">
	SELECT
		open_subject_code as openSubjectCode,
		subject_name as subjectName
	FROM
		open_subject	
	WHERE
		open_subject_code = #{openSubjectCode}
		
	</select>
	
	
	<!-- 진호 -->
</mapper>
